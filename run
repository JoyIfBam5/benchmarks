#!/bin/bash

# configure this for your system
classpath="/opt/local/share/scala-2.10/lib/scala-library.jar:/opt/local/share/scala-2.10/lib/akka-actors.jar:/opt/local/share/scala-2.10/lib/typesafe-config.jar"

# classpath for ActorFoundry
classpath_foundry="actor_foundry/lib_src/lib/foundry-1.0.jar:actor_foundry/lib_src/classes"

usage="\
usage: $0 USERID BIN_PATH IMPL BENCH

  USERID:   ID of the user the benchmark should run (script needs root access)
  BIN_PATH: path to CAF binaries
  IMPL:     (caf|scala|erlang|foundry)
  BENCH:    (mixed_case|actor_creation|mailbox_performance)

"

if [[ $# < 4 ]]; then
  echo "too few arguments"; echo; echo "$usage"
  exit
fi

if [[ $(id -u) != 0 ]]; then
  echo "need to be root"; echo; echo "$usage"
  exit
fi

if [[ $(uname) == "Darwin" ]]; then
  NumCores=$(/usr/sbin/system_profiler SPHardwareDataType | awk 'tolower($0) ~ /total number of cores/ {print $5};')
else
  NumCores=$(grep "processor" /proc/cpuinfo | wc -l)
fi

cmd=""
username="$1"
userid=$(id -u $username)
shift
binpath="$1"
shift
impl="$1"
shift
bench="$1"
shift

java_cmd=$(which java)
erl_cmd=$(which erl)

case "$impl" in
  caf)
    cmd="$binpath/$bench $@"
    ;;
  scala)
    cmd="$java_cmd -cp $binpath:$classpath org.caf.$bench $@"
    ;;
  erlang)
    cmd="$erl_cmd -noshell -noinput +P 20000000 -smp enable +S $NumCores:$NumCores -setcookie abc123 -sname benchmark -pa erlang -s $bench start $@ -s init stop"
    ;;
  foundry)
    modified_args=\"$(echo "_$@" | tr ' ' _)\"
    cmd="$java_cmd -cp $classpath_foundry osl.foundry.FoundryStart osl.examples.caf_benches.$bench boot $modified_args"
    echo $cmd
    ;;
  *)
    echo "invalid argument: $impl"; echo; echo "$usage"
    exit 1
    ;;
esac

olddir=$PWD
cd "$binpath"
export JAVA_OPTS="-Xmx40960M"
./caf_run_bench $userid 3600 75 $cmd
cd "$olddir"
