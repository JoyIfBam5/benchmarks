//module org.caf.salsa;

behavior chain_master {
  int            m_iteration;
  supervisor     m_mc;
  chain_link     m_next;
  worker         m_factorizer;
  int            m_ring_size;
  int            m_initial_token;
  int            m_repetitions;

  chain_master(supervisor msgcollector, int ring_size,
               int initial_token, int repetitions) {
    m_iteration   = 0;
    m_mc          = msgcollector;
    m_factorizer  = new worker(m_mc);
    m_ring_size   = ring_size;
    m_repetitions = repetitions;
    m_initial_token = initial_token;
    m_factorizer <- calc();
    self <- build_ring() @
    self <- _token(m_initial_token);
  }

  ack build_ring() {
    m_next = null;
    for (int i = 1; i < m_ring_size; ++i) {
      m_next = new chain_link(m_next, self);
    }
  }

  ack _token(int y) {
    if (y == 0) {
      if (++m_iteration < m_repetitions) {
        m_factorizer <- calc();
        self <- build_ring() @
        m_next <- _token(m_initial_token);
      } else {
        m_factorizer <- done();
        m_mc <- masterdone();
      }
    } else {
      m_next <- _token(y - 1);
    }
  }
}
