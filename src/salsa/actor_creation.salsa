behavior actor_creation {
  actor_creation m_parent = null;
  int            m_num    = 0;
  int            m_r1     = 0;
  int            m_r2     = 0;

  actor_creation(String[] argv) {
    if (argv.length != 1) {
      //standardOutput <- println("usage: actor_creation POW" +
      //                          "       creates 2^POW actors");
      System.exit(0);
    }
    m_num = Integer.parseInt(argv[0]);
    self <- spread(m_num);
  }

  actor_creation(actor_creation _parent, int num) {
    m_parent = _parent;
    m_num    = num;
  }

  ack spread(int x) {
    if (x == 1) {
      m_parent <- result(1);
      m_parent = null;
    } else {
      int msg = x - 1;
      new actor_creation(self, m_num) <- spread(msg);
      new actor_creation(self, m_num) <- spread(msg);
    }
  }

  ack result(int r) {
    if      (m_r1 == 0) m_r1 = r;
    else if (m_r2 == 0) m_r2 = r;
    if (m_r1 != 0 && m_r2 != 0) {
      if (m_parent == null) {
        int result   = 2 + m_r1 + m_r2;
        int expected = (1 << m_num);
        if (result != expected) {
          String str = "expected: " + expected + " found: " + result;
          //standardOutput <âˆ’ println(str); // why is this not working...?
          System.out.println(str);
        }
        // I don't know a better way. We don't want to keep
        // the WWCReceptionService running.
        System.out.println("Result is: " + result);
        System.exit(0);
      } else {
        m_parent <- result(1 + m_r1 + m_r2);
        m_parent = null;
      }
    }
  }
}
